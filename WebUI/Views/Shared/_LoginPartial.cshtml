@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using MediatR
@using Application.Queries.Dealer

@inject IMediator mediator
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IHttpContextAccessor httpContextAccessor

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
        {
            var userId = httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier).Value;
            var isDealer = await mediator.Send(new IsDealer(userId));

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Dealer" asp-action="MyCars">My Cars</a>
        </li>
        @if (!isDealer)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Dealer" asp-action="Create">Create Dealer</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>